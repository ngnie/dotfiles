cmd fzf_find ${{
    res="$(find . -maxdepth 10 | fzf --reverse --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

cmd fzf_rg ${{
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    res="$(
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1 | sed 's/\\/\\\\/g;s/"/\\"/g'
    )"
    [ -n "$res" ] && lf -remote "send $id select \"$res\""
}}

cmd yank_path ${{
  set -f
  readlink -f $f | tr -d '\n' | xclip -selection clipboard
}}

cmd yank_filename ${{
  set -f
  basename "$(readlink -f "$f")" | tr -d '\n' | xclip -selection clipboard
}}

map . set hidden!
map gj :fzf_find
map gl :fzf_rg

map y
map yy copy
map yp yank_path
map yn yank_filename
